This module was created using http://wiki.netbeans.org/How_to_create_support_for_a_new_language
as the basis for what needed to be done. It, like the tutorial, uses javacc to generate the
lexer, then integrates with the javacc lexer.

PACKAGES:

org.lesscss - the base for the property. No real functional code.

org.lesscss.jcclexer - the javacc files used to create the lexer and generated by the compiler
    lesscss.jj - the javacc token definition file
    SimpleCharStream.java - file originally generated by javacc, but overridden for use with our lexer. DO NOT let javacc override it (though it shouldn't)

org.lesscss.lexer - the lexer used to integrate netbeans and the javacc files
    LessCSSExtraConstants.java - interface defining constants we use for highlighting that are not defined by javacc
    LessCSSLanguageHierarchy.java - class that gives precedence to the tokens and specifies how the tokens are recognized
    LessCSSLexer.java - the lexer class that does our magic
    LessCSSTokenId.java - class for storing information about the tokens



HOW TOS:

How do I regenerate the javacc files after lesscss.jj has been changed?
    This is fairly simple. From src/org/lesscss/jcclexer run the following command:
    "javacc -NOSTATIC -NOBUILD_PARSER lesscss.jj"
    Ignore any warnings reguarding renaming SimpleCharStream.jj

How do I make a new version when I am ready to release it?
    Right click on the 'lesscss-module' project and select 'Properties'. Change the
    API Version number for the module (this allows netbeans to realize that there was
    an update to the module). Right click on the project again and select 'Create NBM'.
    The new file will be saved to build/lesscss-module.nbm. Distribute as necessary.